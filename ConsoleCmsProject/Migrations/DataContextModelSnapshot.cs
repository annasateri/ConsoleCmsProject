// <auto-generated />
using System;
using ConsoleCmsProject.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleCmsProject.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ErrandEntityId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<string>("SteetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ErrandEntityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.CommentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ErrandEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateComment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("ErrandEntityId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("AddressesId")
                        .HasColumnType("int");

                    b.Property<int>("CommentsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ErrandId")
                        .HasColumnType("int");

                    b.Property<int>("ErrandsId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("char(13)");

                    b.HasKey("Id");

                    b.HasIndex("AddressesId");

                    b.HasIndex("CommentsId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ErrandsId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.ErrandEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ErrandTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateComment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Errands");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.AddressEntity", b =>
                {
                    b.HasOne("ConsoleCmsProject.Models.Entities.ErrandEntity", null)
                        .WithMany("Addresses")
                        .HasForeignKey("ErrandEntityId");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.CommentEntity", b =>
                {
                    b.HasOne("ConsoleCmsProject.Models.Entities.ErrandEntity", null)
                        .WithMany("Comments")
                        .HasForeignKey("ErrandEntityId");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.CustomerEntity", b =>
                {
                    b.HasOne("ConsoleCmsProject.Models.Entities.AddressEntity", "Addresses")
                        .WithMany("Customers")
                        .HasForeignKey("AddressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCmsProject.Models.Entities.CommentEntity", "Comments")
                        .WithMany("Customers")
                        .HasForeignKey("CommentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCmsProject.Models.Entities.ErrandEntity", "Errands")
                        .WithMany("Customers")
                        .HasForeignKey("ErrandsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("Errands");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.AddressEntity", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.CommentEntity", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("ConsoleCmsProject.Models.Entities.ErrandEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
